<% if current_page?(home_page_path) %>
<%= simple_form_for "", url: properties_path, method: :get do |f| %>
<div class="row px-1">
    <div class="col-lg-3 px-1">
        <%= f.input :property_type, collection: Property::PROPERTYTYPE, required: true, input_html: { class: "form-control form-control-lg" }, label: false, wrapper: false %>
    </div>
    <div class="col-lg-3 px-1">
        <%= f.input :ad_type, collection: Property::ADTYPE, required: true, input_html: { class: "form-control form-control-lg" }, label: false, wrapper: false %>
    </div>
    <div class="col-lg-4 px-1">
        <%= f.input :city, placeholder: "Ou ? Example: Zogbo, Fifadji, etc...", input_html: { class: "form-control form-control-lg" }, label: false, wrapper: false %>
    </div>
    <div class="col-lg-2 px-1">
        <%= f.button :submit, "Rechercher", name: nil, class: 'btn btn-primary btn-block btn-lg' %>
    </div>
</div>

<% end %>

<%= form_with url: properties_path, method: :get, local: true do |form| %>
<div class="form-row px-1">
    <div class="col-lg-3 my-1">
        <%= form.select :property_type, PropertyType.all.collect { |p| [ p.name, p.id ] }, { include_blank: "Type de bien" }, { class: "form-control form-control-lg", required: true } %>
    </div>
    <div class="col-lg-3 my-1">
        <%= form.select :ad_type, AdType.all.collect { |p| [ p.name, p.id ] }, { include_blank: "Type d'annonce" }, { class: "form-control form-control-lg", required: true } %>
    </div>
    <div class="col-lg-4 my-1">
        <%= form.search_field :city, placeholder: "Ou ? Example: Zogbo, Fifadji, etc...", class: 'form-control form-control-lg' %>
    </div>
    <div class="col-lg-2 my-1">
        <%= form.submit "Rechercher", name: nil, class: 'btn btn-primary btn-block btn-lg' %>
    </div>
</div>
<% end %>
<% elsif current_page?(controller: "properties", action: "index")%>
<%= form_with url: properties_path, method: :get, local: true do |form| %>
<div class="form-row px-1">
    <div class="col-lg-4 my-1">
        <%= form.select :property_type, PropertyType.all.collect { |p| [ p.name, p.id ] }, { prompt: "Type de bien" }, { class: "form-control", required: true } %>
    </div>
    <div class="col-lg-4 my-1">
        <%= form.select :ad_type, AdType.all.collect { |p| [ p.name, p.id ] }, { prompt: "Type d'annonce" }, { class: "form-control", required: true } %>
    </div>
    <div class="col-lg-4 my-1">
        <%= form.text_field :city, placeholder: "Ou ? Example: Zogbo, Fifadji, Ste Rita etc...", class: 'form-control' %>
    </div>
    <div class="col-lg-3 my-1">
        <%= form.select :room, Property::ROOM, { prompt: "Nombres de piÃ¨ce" }, class: "form-control" %>
    </div>    
    <div class="col-lg-2 my-1">
        <%= form.number_field :loyer_minimum, placeholder: "Loyer minimum", class: 'form-control' %>
    </div>
    <div class="col-lg-2 my-1">
        <%= form.number_field :loyer_maximum, placeholder: "Loyer maximum", class: 'form-control' %>
    </div>
    <div class="col-lg-2 my-1">
        <%= form.number_field :surface_minimum, placeholder: "Surface minimum", class: 'form-control' %>
    </div>
    <div class="col-lg-3 my-1">
        <%= form.submit "Rechercher", name: nil, class: 'btn btn-primary btn btn-block' %>
    </div>
</div>
<% end %>
<% end %>



create_table "properties", force: :cascade do |t|
    t.string "title"
    t.decimal "price", precision: 10, scale: 2
    t.integer "area"
    t.text "description"
    t.string "address"
    t.string "city"
    t.float "latitude"
    t.float "longitude"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.integer "user_id"
    t.string "slug"
    t.string "room"
    t.boolean "available"
    t.boolean "published", default: false
    t.integer "avance"
    t.string "feature", array: true
    t.string "etage"
    t.string "travaux"
    t.datetime "published_at"
    t.string "commune"
    t.string "property_type"
    t.string "ad_type"
    t.index ["slug"], name: "index_properties_on_slug", unique: true
    t.index ["user_id"], name: "index_properties_on_user_id"
  end



  def index
        if user_signed_in?
            if current_user.admin?
                @properties = Property.all.order("created_at DESC").page(params[:page]).per(6)
                @properties_numbers = @properties.count
            else
                if params[:property_type].present? and params[:ad_type].present? and params[:city].present?
                    @properties = Property.where("property_type_id = ? AND ad_type_id = ? AND city LIKE ?", params[:property_type].to_i, params[:ad_type].to_i, "%#{params[:city]}%").all.order("created_at DESC").published.page(params[:page]).per(6)
                    @properties_numbers = @properties.count
                elsif params[:property_type].present? and params[:ad_type].present? and params[:city].blank?
                    @properties = Property.where("property_type_id = ? AND ad_type_id = ?", params[:property_type].to_i, params[:ad_type].to_i).all.order("created_at DESC").published.page(params[:page]).per(6)
                    @properties_numbers = @properties.count
                elsif params[:property_type].present?
                    @property_type_id = PropertyType.find_by(name: params[:property_type]).id
                    @properties = Property.where("property_type_id = ?", @property_type_id).all.order("created_at DESC").published.page(params[:page]).per(6)
                    @properties_numbers = @properties.count
                elsif params[:ad_type].present?
                    @ad_type_id = AdType.find_by(name: params[:ad_type]).id
                    @properties = Property.where("ad_type_id = ?", @ad_type_id).all.order("created_at DESC").published.page(params[:page]).per(6)
                    @properties_numbers = @properties.count
                else
                    @properties = Property.all.order("created_at DESC").published.page(params[:page]).per(6)
                    @properties_numbers = @properties.count
                end
            end
        else
            if params[:property_type].present? and params[:ad_type].present? and params[:city].blank? and params[:room].blank? and params[:surface_minimum].blank? and params[:loyer_minimum].blank? and params[:loyer_maximum].blank?
                @properties = Property.where("property_type_id = ? AND ad_type_id = ?", params[:property_type].to_i, params[:ad_type].to_i).all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count
            elsif params[:property_type].present? and params[:ad_type].present? and params[:city].present? and params[:room].blank? and params[:surface_minimum].blank? and params[:loyer_minimum].blank? and params[:loyer_maximum].blank?
                @properties = Property.where("property_type_id = ? AND ad_type_id = ? AND city LIKE ?", params[:property_type].to_i, params[:ad_type].to_i, "%#{params[:city]}%").all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count



            elsif params[:property_type].present? and params[:ad_type].present? and params[:city].present? and params[:room].blank? and params[:surface_minimum].present? and params[:loyer_minimum].present? and params[:loyer_maximum].present?
                @properties = Property.where("property_type_id = ? AND ad_type_id = ? AND city LIKE ? AND area >= ? AND price BETWEEN #{params[:loyer_minimum].to_i} AND #{params[:loyer_maximum].to_i}", params[:property_type].to_i, params[:ad_type].to_i, "%#{params[:city]}%", params[:surface_minimum].to_i).all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count

            elsif params[:property_type].present? and params[:ad_type].present? and params[:city].present? and params[:room].blank? and params[:surface_minimum].present? and params[:loyer_minimum].blank? and params[:loyer_maximum].blank?
                @properties = Property.where("property_type_id = ? AND ad_type_id = ? AND city LIKE ? AND area >= ?", params[:property_type].to_i, params[:ad_type].to_i, "%#{params[:city]}%", params[:surface_minimum].to_i).all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count

            elsif params[:property_type].present? and params[:ad_type].present? and params[:city].present? and params[:room].blank? and params[:surface_minimum].blank? and params[:loyer_minimum].present? and params[:loyer_maximum].present?
                @properties = Property.where("property_type_id = ? AND ad_type_id = ? AND city LIKE ? AND price BETWEEN #{params[:loyer_minimum].to_i} AND #{params[:loyer_maximum].to_i}", params[:property_type].to_i, params[:ad_type].to_i, "%#{params[:city]}%").all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count

            elsif params[:property_type].present? and params[:ad_type].present? and params[:city].blank?
                @properties = Property.where("property_type_id = ? AND ad_type_id = ?", params[:property_type].to_i, params[:ad_type].to_i).all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count
            elsif params[:property_type].present?
                @property_type_id = PropertyType.find_by(name: params[:property_type]).id
                @properties = Property.where("property_type_id = ?", @property_type_id).all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count
            elsif params[:ad_type].present?
                @ad_type_id = AdType.find_by(name: params[:ad_type]).id
                @properties = Property.where("ad_type_id = ?", @ad_type_id).all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count
            else
                @properties = Property.all.order("created_at DESC").published.page(params[:page]).per(6)
                @properties_numbers = @properties.count
            end
        end
    end